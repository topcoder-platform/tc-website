package com.topcoder.common.web.data;

import java.util.ArrayList;
import java.io.Serializable;
import java.sql.Date;
import com.topcoder.common.web.xml.*;


public final class Contest implements Serializable, Base, Comparable {

  private int contestId;
  private String contestName;
  private java.sql.Date contestStart;
  private java.sql.Date contestEnd;
  private java.sql.Timestamp contestStartTimestamp;
  private java.sql.Timestamp contestEndTimestamp;
  private String status;
  private Language language;
  private Group group;
        
  public Contest() {
    contestId = 0;
    contestName = "";
    contestStart = null;
    contestEnd = null;
    contestStartTimestamp = null;
    contestEndTimestamp = null;
    status = "";
    language = new Language(); 
    group = new Group();
  }

  public int compareTo ( Object other ) {
    int result = 0;
    Contest otherContest = ( Contest ) other;
    if ( this.contestStartTimestamp==null && otherContest.getContestStartTimestamp()!=null ) {
      result = -1;
    } else if ( this.contestStartTimestamp!=null && otherContest.getContestStartTimestamp()==null ) {
      result = 1;
    } else if ( this.contestStartTimestamp==null && otherContest.getContestStartTimestamp()==null ) {
      result = 0;
    } else {
      result = this.contestStartTimestamp.compareTo(otherContest.getContestStartTimestamp());
    }
    return result;
  }

// set
           
  public void setGroup(Group group) {
    this.group = group;
  }

  public void setContestId(int contestId) {
    this.contestId = contestId;
  }

  public void setContestName(String contestName) {
    this.contestName = contestName;
  }

  public void setContestStart(java.sql.Date contestStart) {
    this.contestStart = contestStart;
  }

  public void setContestEnd(java.sql.Date contestEnd) {
    this.contestEnd = contestEnd;
  }

  public void setContestStartTimestamp(java.sql.Timestamp contestStartTimestamp) {
    this.contestStartTimestamp = contestStartTimestamp;
  }

  public void setContestEndTimestamp(java.sql.Timestamp contestEndTimestamp) {
    this.contestEndTimestamp = contestEndTimestamp;
  }

  public void setStatus (String status) {
    this.status = status;
  }

  public void setLanguage(Language language) {
    this.language = language;
  }


// get

  public Group getGroup() {
    return this.group;
  }

  public int getContestId() {
    return this.contestId;
  }

  public String getContestName() {
    return this.contestName;
  }

  public java.sql.Date getContestStart() {
    return this.contestStart;
  }

  public java.sql.Date getContestEnd() {
    return this.contestEnd;
  }

  public java.sql.Timestamp getContestStartTimestamp() {
    return this.contestStartTimestamp;
  }

  public java.sql.Timestamp getContestEndTimestamp() {
    return this.contestEndTimestamp;
  }

  public String getStatus() {
    return this.status;
  }

  public Language getLanguage() {
    return this.language;
  }




  public RecordTag getXML() throws Exception {
    RecordTag result = null;
    try {
      result = new RecordTag("Contest");
      result.addTag( new ValueTag("ContestId", contestId) );
      result.addTag( new ValueTag("ContestName", contestName) );
      result.addTag( new ValueTag("ContestStart", contestStart) );
      result.addTag( new ValueTag("ContestEnd", contestEnd) );
      result.addTag( new ValueTag("ContestEndTimestamp", contestEndTimestamp) );
      result.addTag( new ValueTag("ContestStartTimestamp", contestStartTimestamp) );
      result.addTag( new ValueTag("Status", status) );
      result.addTag( language.getXML() );
      result.addTag( group.getXML() );
    }catch (Exception e)  {
      throw new Exception("common.web.data.Contest getXML ERROR: " + e);
    }
    return result;
  }
  
  //Method to retrieve a time value in hh:mm:ss format from a 
  //java.sql.Timestamp object
  private String getTime(java.sql.Timestamp timeStamp) {
    String timeStampString = null;
    int spaceIndex = 0;
    String timeVal = null;

    if(timeStamp != null) {
      timeStampString = timeStamp.toString();
      spaceIndex = timeStampString.indexOf(" ") + 1;
      timeVal = timeStampString.substring(spaceIndex, spaceIndex + 8);
    }

    return timeVal;
  }
}

