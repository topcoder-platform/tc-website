-- Author: pulky
-- Version: 1.2
-- Copyright (C) 2004 - 2009 TopCoder Inc., All Rights Reserved.
--
-- Description: This query returns necessary data to build project detail page for a specific project.
--
-- Version 1.1 ((Studio Coding In Online Review) changes: added support for Studio Prototype, Studio Build and
--    Studio Component competitions.
--
-- Version 1.2 (Testing Competition Split Release Assembly 1.0) changes: added support test scenarios project type.
--
-- Important Note: do not include this comments in query tool since it will fail to create/update the query.

select cc.component_name
     , cv.version as version_id
     , cv.phase_id
     , round(nvl(pi16.value::decimal, 0)) as price
     , cc.description
     , cc.component_id
     , round(nvl(pi16.value::decimal, 0)) as total_payment
     , round(nvl(pi16.value::decimal, 0)) * 0.75 as first_payment
     , round(nvl(pi16.value::decimal, 0)) * 0.25 as second_payment
     , round(nvl(pi16.value::decimal, 0)) * 0.5 as second_place_payment
     , pi4.scheduled_start_time posting_date
     , pi1.scheduled_end_time initial_submission_date
     , pi2.scheduled_end_time winner_announced_date
     , pi3.scheduled_end_time final_submission_date
     , cd.document_id
     , cvd.status_id
     , (select count(*)
          from component_inquiry ci
         where ci.component_id = cc.component_id
           and ci.phase = cv.phase_id
           and ci.version = cv.version) as num_inquiries
     , (select count(*)
          from component_inquiry ci, user_rating ur
         where ci.component_id = cc.component_id
           and ci.phase = cv.phase_id
           and ci.phase = ur.phase_id
           and ci.user_id = ur.user_id
           and ci.version = cv.version) as num_rated_inquiries
     , (select count(*)
          from component_inquiry ci
         where ci.component_id = cc.component_id
           and ci.phase = cv.phase_id
           and ci.version = cv.version
           and not exists (select '1'
                             from user_rating ur
                            where ur.user_id = ci.user_id
                              and ur.phase_id = ci.phase
                              and ur.num_ratings > 0)) as num_unrated_inquiries
     , CASE WHEN (EXTEND(pi4.scheduled_end_time, YEAR to MINUTE) < current or EXTEND(pi4.scheduled_start_time, YEAR to MINUTE) > current) THEN 'closed' ELSE 'open' END as project_status
     , cc.root_category_id as root_category_id
     , cat.viewable
     , x.jive_category_id
     , cat.is_custom
  from project p
     , comp_catalog cc
     , comp_versions cv
     , comp_version_dates cvd
     , project_phase pi1
     , project_phase pi2
     , project_phase pi3
     , project_phase pi4
     , project_info pi
     , OUTER comp_documentation cd
     , categories cat
     , outer comp_jive_category_xref x
     , outer project_info pi16
 where 1=1
      and p.project_id = @pj@
   and cc.root_category_id = cat.category_id
   and p.project_id = pi.project_id
   and pi.project_info_type_id = 1
   and pi.value = cv.comp_vers_id
   and cv.component_id= cc.component_id
   and p.project_category_id in (1,2,6,5,7,13,14,23,19,24,25,26)
   and cv.comp_vers_id = cvd.comp_vers_id
   and cv.phase_id = cvd.phase_id
--these dates make this query return more than one row
   and pi4.project_id = p.project_id
   and pi4.phase_type_id = 1
   and pi1.project_id = p.project_id
   and pi1.phase_type_id = 2
   and pi2.project_id = p.project_id
   and pi2.phase_type_id = 6
   and pi3.project_id = p.project_id
   and pi3.phase_type_id = 9
   and cd.comp_vers_id = cv.comp_vers_id
   and cd.document_type_id = 0
   and x.comp_vers_id = cv.comp_vers_id
   and pi16.project_info_type_id = 16
   and pi16.project_id = p.project_id
