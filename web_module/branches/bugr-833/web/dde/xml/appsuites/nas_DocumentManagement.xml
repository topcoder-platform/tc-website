<?xml version="1.0"?>
<appSuite>
	<name>Document Management</name>
	<catalog>dotnet</catalog>
	<overview>This application suite has been compiled from TopCoder&#39;s Catalog of re-useable .NET components with the focus on delivering the building blocks of an enterprise document management solution.   The suite includes the essentials for providing security for both data and users through industry standard encryption techniques.  The manipulation of data for both order capture and catalog presentation as well as the configuration features required to administer a dynamic website.  Customer communication components provide the priority based tracking of issues, email notification ability and mass email campaign capabilities.&lt;br/&gt;&lt;br/&gt;This suite has been used by TopCoder to deliver applications to our customers.  Each component is developed with the same engineering discipline found in TopCoder&#39;s Competitive Development Methodology.  The consistency and rigor put into all software developed at TopCoder starts from each building block within our catalog.&lt;br/&gt;&lt;br/&gt;If you are interested in learning more about purchasing a subscription to access TopCoder&#39;s components or to learn about TopCoder&#39;s Application Development Services, we can be reached at &lt;A href="mailto:sales@topcodersoftware.com"&gt;sales@topcodersoftware.com&lt;A&gt;.</overview>
	<functionality>&lt;li&gt;Online Checkout&lt;/li&gt;&lt;li&gt;Product Browsing&lt;/li&gt;&lt;li&gt;Security&lt;/li&gt;&lt;li&gt;Order Processing&lt;/li&gt;&lt;li&gt;Administration&lt;/li&gt;&lt;li&gt;Customer Communication&lt;/li&gt;</functionality>
	<sampleApp>
		<doc file='/images/catalog/appsuites/docManagement/GenericMarshDeployment.jpg'>Component Diagram</doc>
	</sampleApp>
	<!--<caseStudy file='http://www.topcoder.com/i/downloads/Gift_Card_Case_Study.pdf'/>-->
	<componentList>
	   <component name='FTP Utility' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=6401313&amp;ver=1'/>
      <component name='Data Access Interface' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=8595405&amp;ver=1'/>
		<component name='Connection Manager' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=11923920&amp;ver=1'/>
		<component name='Configuration Manager' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=5904571&amp;ver=2'/>                                                    
		<component name='Authorization' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=7325387&amp;ver=1'/>
		<component name='Authentication' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=10166027&amp;ver=1'/>
		<component name='File Upload' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=8447769&amp;ver=1'/>
		<component name='Document' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=12040127&amp;ver=1'/>
		<component name='Document Link Resolver' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=10286499&amp;ver=1'/>
		<component name='Document Generator' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=600038&amp;ver=1'/>
		<component name='Email Engine' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=4208949&amp;ver=1'/>
		<component name='Encryption' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=8444506&amp;ver=1'/>
		<component name='ID Generator' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=9947626&amp;ver=1'/>
		<component name='Logging Wrapper' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=4311341&amp;ver=1'/>
		<component name='Compression Utility' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=6401040&amp;ver=1'/>
		<component name='Multi-File Upload' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=10254868&amp;ver=1'/>
		<component name='Data Validation' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=8536620&amp;ver=1'/>
		<component name='Password Validator' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=9947659&amp;ver=1'/>
		<component name='File Conversion' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=9931748&amp;ver=1'/>
		<component name='File OLE Conversion' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=12037340&amp;ver=1'/>
		<component name='Bread Crumb Trail' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=9978683&amp;ver=1'/>
		<component name='Linked List' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=6511331&amp;ver=1'/>
		<component name='User Profile' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=9965859&amp;ver=1'/>
		<component name='Email Address Validator' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=2804393&amp;ver=1'/>
		<component name='Email Confirmation' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=10616127&amp;ver=1'/>
		<component name='Forgot Password' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=12008697&amp;ver=1'/>
		<component name='Random String Generator' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=8390499&amp;ver=1'/>
		<component name='Command Line Utility' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=6526755&amp;ver=1'/>
		<component name='Dictionary' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=9966196&amp;ver=1'/>
		<component name='Reference Collection' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=10375032&amp;ver=1'/>
		<component name='Multi-File Download' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=10254975&amp;ver=1'/>
		<component name='Simple File Database' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=10373243&amp;ver=1'/>
	</componentList>
	<compDiagram>
		<appFunction name='File Transfer' desc='Components within the file transfare designed to implement a standard checkout process capable of accepting orders, interfacing with back end order processing routines, and managing customer information such as shopping carts, address books and credit card information.'>
			<component name='Multi-File Download' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=10254975&amp;ver=1' desc='The Multi-File Download Component provides the ability for web applications to support multi-file downloads. Users will browse to a folder on their local hard drive using a familiar "Windows-like" browse window and the files to be downloaded can all be downloaded to the chosen folder, keeping the sub-folder structure of the folder intact.  The Multi-File Download Component is implemented as a signed ActiveX Control in the .NET environment so that security issues can be allayed. Users will download the compact ActiveX control upon first use and can then utilize the functionality of the component on a single PC without having to download each time.'/>
			<component name='File Upload' details='http://software.topcoder.com/catalog/c_component.jsp?comp=8447769&amp;ver=1' desc='The File Upload component supports web-based file uploads. Files are received via HTTP requests. Applications implementing the component have the ability to store uploaded files on the file system or are given access to the file to enable storage in a database.&lt;br&gt;&lt;br&gt;An example of the file upload component in use is the TopCoder.com website. The file upload component has been integrated into the site so that members can upload their photos over the web and have them appear in real-time.'/>
			<component name='Multi-File Upload' details='http://software.topcoder.com/catalog/c_component.jsp?comp=10254868&amp;ver=1' desc='The Multi-File Upload Component provides the ability for web applications to support multi-file uploads. Users will browse to a folder on their local hard drive using a familiar &#39;Windows-like&#39; browse window and all files within that folder and/or its subfolders can be uploaded with a single click of a button.&lt;br&gt;&lt;br&gt;The Multi-File Upload Component is implemented as a signed ActiveX Control in the .NET environment so that security issues can be allayed. Users will download the compact ActiveX control upon first use and can then utilize the functionality of the component on a single PC without having to download each time.'/>
    		<component name='Compression Utility' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=6401040&amp;ver=1' desc='The Compression Utility provides a mechanism for defining and executing compression/decompression algorithms from within managed C# code. The component is designed to enable additional algorithms to be added with relative ease. The initial implementation supports the LZ77 compression algorithm.  The Compression Utility will be used in the TopCoder zip utility to compress/decompress files used in the zip application.'/>
    		<component name='Document' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=12040127&amp;ver=1' desc='This object represents a document. Each document is persisted to a file system. This component keeps track of where each file is stored and the path to access the file. A group of documents are stored together as plans. Each plan will contain one to many documents and a document will exist in one and only one plan.  The component will support uploading several documents and store information about these documents using a persistent database.'/>
    		<component name='FTP Utility' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=6401313&amp;ver=1' desc='The 100% managed C# FTP component wraps standard FTP commands into an easy to use API. FTP connections can be initiated in passive or active mode, and files can be transferred in ASCII or binary mode. For FTP commands that are not supported by this component, a facility is available to enter those commands directly through the API.  A scheduled job requires the movement of the daily report spreadsheet to a web server. The FTP component is used to programmatically transfer the file to the web server for distribution.'/>
		</appFunction>
		<appFunction name='File Conversion' desc='In order to transf'>
    		<component name='Document' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=12040127&amp;ver=1' desc='This object represents a document. Each document is persisted to a file system. This component keeps track of where each file is stored and the path to access the file. A group of documents are stored together as plans. Each plan will contain one to many documents and a document will exist in one and only one plan.  The component will support uploading several documents and store information about these documents using a persistent database.'/>
    		<component name='Document Link Resolver' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=10286499&amp;ver=1' desc='The Document Link Resolver is a custom component developed for a TopCoder client. It will provide a mechanism for taking various MS Office files that are saved as HTML, finding links within the documents to other documents and changing out the links to URLs that point to the HTML version of the other documents.  The component will be configurable in order to support custom document types and link filters.  A customer is building a document management application in which MS Office files that contain links to other documents will be uploaded and saved as HTML files. The Document Link Resolver will be used to convert links within the HTML version of the files to URLs whereby the user can click on the links from within the HTML version of any document and be redirected to the HTML version of the document being linked to.'/>
    		<component name='File Conversion' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=9931748&amp;ver=1' desc='The File Conversion component allows users to convert content from one format to another. Initial implementation will only include the ability to convert HTML to Tab-Delimited, as well as defining the conversion framework. The component can be used in a variety of contexts. One application may use it to convert a chunk of HTML, while another may use it to bulk convert a number of files in different formats to a particular format.'/>
    		<component name='File OLE Conversion' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=12037340&amp;ver=1' desc='The File Conversion component allows users to convert content from one format to another. This implementation is an extension of the File Conversion framework and supports converting Microsoft Office documents directly to HTML. The conversion is performed using Office 2K3 Interopt dlls and Office 2K3.  TopCoder would like to upload presentations and have them converted automatically to web pages.'/>
    		
            <component name='Document Generator' details='http://software.topcoder.com/catalog/c_component.jsp?comp=8567592&amp;ver=1' desc='The Document Generator creates text files based on templates. It will be used to automatically generate build scripts for TopCoder components, driven by a template stored in a database.&lt;br&gt;&lt;br&gt;TopCoder generates a build file for each component as it goes in to development. This file is based on a template, and modified by hand to suit the particular component.'/>
		</appFunction>
		<appFunction name='Foundation' desc='Foundation components are the infrastructure level components used by the application.  These components provide the very basic building blocks of the application such as configuration, logging, error handling, data caching and connectivity.'>
			<component name='Configuration Manager' details='http://software.topcoder.com/catalog/c_component.jsp?comp=5904571&amp;ver=1' desc='.NET libraries do not currently support automatic loading of configuration files. In the instance of a library dll used in numerous applications, adding additional configuration details to all of the applications&#39; configuration files is not optimal. The purpose of the Configuration Manager is to centralize the management of, and access to, these files.&lt;br&gt;&lt;br&gt;A library for sending emails requires configuring the SMTP server address and port. A web application using this library does not want to configure these details in the web.xml.'/>
			<component name='Logging Wrapper' details='http://software.topcoder.com/catalog/c_component.jsp?comp=4311341&amp;ver=1' desc='The .NET Logging Wrapper component provides a standard logging API with support for pluggable back-end logging solutions. Components utilizing the .NET Logging Wrapper are not tied to a specific logging solution. A change to the pluggable back-end logging solution does not require a code change to the .NET Logging Wrapper component.&lt;br&gt;&lt;br&gt;The initial use of the .NET Logging Wrapper component will be within other TopCoder Software components. This will allow TopCoder Software components to be plugged into an existing environment without requiring the additional configuration and implementation of a specific logging solution.'/>
			<component name='ID Generator' details='http://software.topcoder.com/catalog/c_component.jsp?comp=9947626&amp;ver=1' desc='The ID Generator component provides high performance key generation services. It generates unique long IDs while minimizing both network and database overhead. The ID Generator works by implementing a High/Low scheme to generate unique IDs. It also allows IDs to be generated uniquely for a user-defined value.&lt;br&gt;&lt;br&gt;TopCoder might use the ID Generator in the generation of new identifiers for an artificial primary key to a database table. Each time a new primary key is required a call to the ID Generator returns a new primary key. If the application prefers to allow separate sets of ID&#39;s generated per table, the application can call the ID Generator passing the table name as the user defined value. A separate ID is then maintained by table name.'/>
			<component name='Connection Factory' details='http://software.topcoder.com/catalog/c_component.jsp?comp=9900311&amp;ver=1' desc='The Connection Factory component decouples a particular database implementation from applications and other components by providing a layer of abstraction around the creation of a database connection.&lt;br&gt;&lt;br&gt;Any application with database connectivity would use this component create database connections. Administrators could then swap out the underlying database implementation and simply change the configuration of the Connection Factory to compensate.'/>
			<component name='Data Access Interface' details='http://software.topcoder.com/catalog/c_component.jsp?comp=8595405&amp;ver=1' desc='The Data Access Interface component provides a means to perform functions of Microsoft&#39;s Data Access Application Block (DAAB) regardless of the underlying database implementation.&lt;br&gt;&lt;br&gt;Any application with database connectivity would use this component to execute a variety of different command types against the database. Administrators could then swap out the underlying database implementation without having to change the code that uses the Data Access Interface component.'/>
			<component name='Document Generator' details='http://software.topcoder.com/catalog/c_component.jsp?comp=8567592&amp;ver=1' desc='The Document Generator creates text files based on templates. It will be used to automatically generate build scripts for TopCoder components, driven by a template stored in a database.&lt;br&gt;&lt;br&gt;TopCoder generates a build file for each component as it goes in to development. This file is based on a template, and modified by hand to suit the particular component.'/>
		</appFunction>
		<appFunction name='Security' desc='This module provides components that facilitate user and data security.  The security module is in charge of both authentication and authorization. The module provides facilities for advanced identity management including single sign on, role based security and the assignment of granular permissions.  The security module also includes components to perform user self management features such as registration, activation and password generation.'>
			<component name='Data Validation' details='http://software.topcoder.com/catalog/c_component.jsp?comp=8536620&amp;ver=1' desc='The Data Validation component analyses objects to verify that the content meets defined rules. Object content is different for each class and is defined by each class specific DataValidation handler. For example, an Integer handler could validate that the object passed in is in fact an integer and falls within a specified range. In addition, data can be validated across object types.&lt;br&gt;&lt;br&gt;The Data Validation component can be used to facilitate server side data validation for web-based applications. The component can be used to validate that input parameters, which are all represented as strings, are of the correct type, length and within a specified range.'/>
            <component name='Authentication' details='http://software.topcoder.com/catalog/c_component.jsp?comp=10166027&amp;ver=1' desc='The authentication component is responsible for user authentication within a system. Using the factory pattern, this component allows for the use of other pluggable authentication implementations through the same interface. The included TopCoder implementation is a primary player in the TopCoder Security Component Suite.&lt;br&gt;&lt;br&gt;An ecommerce site stores shopper information to allow for faster checkout. This site would require a username and password from the user in order to proceed securely. The .NET Authentication component facilitates the authentication of that user.'/>
			<component name='Authorization' details='http://software.topcoder.com/catalog/c_component.jsp?comp=7325387&amp;ver=1' desc='Authorization is one part of the overall Security picture. Fundamentally, authorization answers of the question: can this entity perform this action on this object?&lt;br&gt;&lt;br&gt;The authorization component provides the framework for applications that require authorization checks. It may be used in conjunction with other security components, such as a User component and a Authentication component, to provide a complete security solution for an application. A particular application would extend the Authorization framework to define the particular authorization scheme needed.&lt;br&gt;&lt;br&gt;A TopCoder client is building a new web-based application. The web server handles authentication automatically, but the application must have rights based on who the user is. The application will use the user ID passed in by the web server as the basis for getting the user&#39;s rights, which will then be used by the application for determining access.'/>
			<component name='Encryption' details='http://software.topcoder.com/catalog/c_component.jsp?comp=8444506&amp;ver=1' desc='The Encryption component provides a simplified framework for performing encryption/decryption routines. This framework can be used to easily access any implemented encryption algorithms to manipulate the target data source. The pluggable design enables additional encryption algorithms to be added to the list of available algorithms.&lt;br&gt;&lt;br&gt;Encryption is a vital mechanism for securing information. This component can be used to encrypt/decrypt data in any .NET application including databases, files, network communications and plain text.'/>
			<component name='Password Validator' details='http://software.topcoder.com/catalog/c_component.jsp?comp=9947659&amp;ver=1' desc='The password validator component provides one centralized component to control an enterprise&#39;s password rules. The validator allows a user to customize the formatting of passwords including the minimum length of the password and the contents of the password. Configurable attributes of the password content including using a dictionary to check the password against as well as the number and combination of letters, characters and numbers allowed in the password. Furthermore, this component includes password expiry rules.&lt;br&gt;&lt;br&gt;TopCoder may need to set more stringent passwords for certain users who have a greater amount of privileges. This component will ensure that all password changes are valid and that the password itself is valid.'/>
			<component name='Email Confirmation' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=10616127&amp;ver=1' desc='The email validation component confirms an email address is valid. The validation logic is a round robin handshake. Authenticating an email address consists of sending a confirmation email to the user. The contents of the email will be configurable for each installation. However, one required field sent in the email will be a unique confirmation key generated by the component. This confirmation key is used to authenticate the email address is valid.  In order to authenticate members are valid, the member&quot;s email address must be confirmed through an email message. This component separates the confirmation logic into a separate component.'/>
    		<component name='Email Address Validator' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=2804393&amp;ver=1' desc='The Email Address Validator validates the authenticity of an email address. This validation extends beyond simple string validation to ensure that the address is well-formed. It communicates over the network with the host SMTP domain, validating the existence of the address and ultimately the validity of the target email address. An email address is considered valid if an email message can successfully be sent to it without the target SMTP server returning an error message.  The Email Address Validator component will be used to reduce the number of returned email messages due to invalid email addresses. Within TopCoder itself, numerous messages are returned during bulk mailings because the target mailbox is unknown or inaccessible. These are most often related to members that do not update their email address after graduating from college. Continuing to send messages to these invalid email addresses requires manual administration of the sending mailbox. In addition, valuable network and hardware resources are wasted processing emails that will never be read.'/>
    		<component name='Forgot Password' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=12008697&amp;ver=1' desc='The Forgot Password component provides a flexible way to provide both a challenge to users who forgot their passwords and process the result of that challenge. The challenge might be checking for existing email address on file, a secret question / answer response, etc. The action might be to reset the user&quot;s password, to email the user&quot;s password to them, etc.  This component will be used in enterprise applications where there is a common need to provide users to either reset or get access to their passwords should they forget it.'/>
    		<component name='Random String Generator' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=8390499&amp;ver=1' desc='The Random String Image component encompasses all functionality around requesting a random string image along with a string containing the text of the image for validation purposes. The randomness of the image will be defined by the text itself, the image and text colors, the text font, the font size, placement of the text within the image and the algorithm used to obfuscate the image.  A website registration process would like to thwart all attempts by outside parties to create a program that automates registering users for the website. The site would ask a user to type what they see in a random string image and validate it against the actual string.'/>
			<component name='Email Engine' details='http://software.topcoder.com/catalog/c_component.jsp?comp=4208949&amp;ver=1' desc='The Email Engine component provides basic and advanced email functionality through API&#39;s. It is not a GUI-based component such as Outlook Express or Yahoo Mail that manages user email accounts. Rather, the Email Engine is a set of API&#39;s that enables a developer to send emails directly from application code.'/>
			<component name='Dictionary' ID='http://software.topcoder.com/catalog/c_component.jsp?comp=9966196&amp;ver=1' desc='The dictionary component supports multiple dictionaries for a system. These dictionaries may support multiple different languages or may be context sensitive. Users of the component may easily add additional custom dictionaries to the component. Furthermore, the dictionary component allows users to maintain separate instances of their own dictionaries. These user specific dictionaries allow a user to add, remove or edit their own set of words which may not exist in the default dictionary.  A dictionary will be used as part of the spell check component to determine if a word is misspelled. Furthermore, a password validator may check to make sure the password is not an English word to improve security.'/>
		</appFunction>
	</compDiagram>
</appSuite>