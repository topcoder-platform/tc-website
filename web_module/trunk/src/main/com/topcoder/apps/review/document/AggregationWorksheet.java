/*
 * AggregationWorksheet.java
 *
 * Copyright ï¿½ 2003, TopCoder, Inc. All rights reserved
 *
 */
package com.topcoder.apps.review.document;

import com.topcoder.apps.review.projecttracker.Project;
import com.topcoder.apps.review.projecttracker.User;

import java.io.Serializable;


/**
 * The AggregationWorksheet is initially generated by the system as a
 * compilation of AggregationResponses with a one-to-one relationship with
 * the SubjectiveResponses of all scorecards submitted for the winning
 * submission.  This object is constructed when a project is moved from
 * review to aggregation.
 *
 * @author FatClimber
 * @version 1.0
 */
public class AggregationWorksheet implements Serializable {
    private long id;
    private boolean isComplete;
    private boolean isPMReviewed;
    private User aggregator;
    private AggregationResponse[] aggResponse;
    private Project project;
    private boolean dirtyFlag = false;
    private long requestorId;
    private long versionId;

    /**
     *
     */
    public AggregationWorksheet(long id, boolean isComplete, boolean isPMReviewed, User aggregator,
                                AggregationResponse[] aggResponse, Project project, long requestorId, long versionId) {
        this.id = id;
        this.isComplete = isComplete;
        this.isPMReviewed = isPMReviewed;
        this.aggregator = aggregator;
        this.aggResponse = aggResponse;
        this.project = project;
        this.requestorId = requestorId;
        this.versionId = versionId;
        if (id == -1) {
            this.dirtyFlag = true;
        }
    }

    /**
     * DOCUMENT ME!
     *
     * @return DOCUMENT ME!
     */
    protected long getRequestorId() {
        return requestorId;
    }

    /**
     * DOCUMENT ME!
     *
     * @return DOCUMENT ME!
     */
    protected boolean getDirty() {
        return dirtyFlag;
    }

    /**
     * @param id
     */
    protected void setDirty(boolean dirtyFlag) {
        this.dirtyFlag = dirtyFlag;
    }

    /**
     * DOCUMENT ME!
     *
     * @return DOCUMENT ME!
     */
    protected long getVersionId() {
        return versionId;
    }

    /**
     * @param vid
     */
    protected void setVersionId(long vid) {
        this.versionId = vid;
    }

    /**
     * <p>
     * Return the id of the aggregation worksheet.
     * </p>
     *
     * @return the id of the aggregation worksheet.
     */
    public long getId() {
        return id;
    }

    /**
     * @param id
     */
    protected void setId(long id) {
        this.id = id;
        this.dirtyFlag = true;
    }

    /**
     * <p>
     * Return whether this worksheet is completed.
     * </p>
     *
     * @return true if the worksheet is completed, otherwise false.
     */
    public boolean isCompleted() {
        return isComplete;
    }

    /**
     * <p>
     * Set whether this worksheet is completed.
     * </p>
     *
     * @param isCompleted Whether this worksheet is completed.
     */
    public void setCompleted(boolean completed) {
        this.isComplete = completed;
        this.dirtyFlag = true;
    }

    /**
     * <p>
     * Return whether the project manager has reviewed this worksheet.
     * </p>
     *
     * @return true if the project manager has reviewed this worksheet,
     * otherwise false.
     */
    public boolean isPMReviewed() {
        return isPMReviewed;
    }

    /**
     * <p>
     * Set whether the project manager has reviewed this worksheet.
     * </p>
     *
     * @param isPMReviewed Whether the project manager has reviewed
     * this worksheet.
     */
    public void setPMReviewed(boolean pmReviewed) {
        this.isPMReviewed = pmReviewed;
        this.dirtyFlag = true;
    }

    /**
     * <p>
     * Return the list of aggregation responses.
     * </p>
     *
     * @return a AggregationResponse[] with the list of aggregation responses.
     */
    public AggregationResponse[] getAggregationResponses() {
        return aggResponse;
    }

    /**
     * <p>
     * Return the project related to this worksheet.
     * </p>
     *
     * @return a Project with the project related to this worksheet.
     */
    public Project getProject() {
        return project;
    }

    /**
     * <p>
     * Return the aggregator of this worksheet.
     * </p>
     *
     * @return the aggregator of this worksheet.
     */
    public User getAggregator() {
        return aggregator;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#equals(java.lang.Object)
     */
    public boolean equals(Object o) {
        if (o == this) {
            return true;
        }

        if (!(o instanceof AggregationWorksheet)) {
            return false;
        }

        AggregationWorksheet worksheet = (AggregationWorksheet) o;

        return worksheet.getId() == this.id;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#hashCode()
     */
    public int hashCode() {
        return (int) (id ^ (id >>> 32));
    }
}
