version: 2
defaults: &defaults
    docker:
      - image: appiriodevops/ubuntu22-openjdk7:v3

install_dependency: &install_dependency
    name: Installation of build dependencies.
    command: |
      sed -i '/jessie-updates/d' /etc/apt/sources.list
      apt update
      apt install -y  openssl ant git zip jq curl unzip wget python
      mkdir ~/awscli
      cd  ~/awscli
      curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
      unzip awscli-bundle.zip
      ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
      cd /usr/share/ant/lib
      wget https://repo1.maven.org/maven2/org/codehaus/groovy/groovy-all/1.7.8/groovy-all-1.7.8.jar
      wget https://repo1.maven.org/maven2/ant-contrib/ant-contrib/1.0b3/ant-contrib-1.0b3.jar
      cd ~
      wget http://downloads.sourceforge.net/project/jboss/JBoss/JBoss-4.2.3.GA/jboss-4.2.3.GA-jdk6.zip
      unzip jboss-4.2.3.GA-jdk6.zip
      cd project
install_deploysuite: &install_deploysuite
    name: Installation of install_deploysuite.
    command: |
      git clone --branch v1.3 https://github.com/topcoder-platform/tc-deploy-scripts ../buildscript
      cp ./../buildscript/master_deploy.sh .
      cp ./../buildscript/buildenv.sh .
      cp ./../buildscript/awsconfiguration.sh .
install_dependentrepo: &install_dependentrepo
    name: Installation of install_deploysuite.
    command: |
      git clone --branch $GLUE_BRANCH https://github.com/topcoder-platform/tc-website-glue ../glue
      git clone --branch $TCSHARED_BRANCH https://github.com/topcoder-platform/tc-website-shared ../shared
      git clone --branch $TCEA_BRANCH https://github.com/topcoder-platform/tc-website-external-artifacts ../external-artifacts
      git clone --branch $TCCACHE_BRANCH https://github.com/appirio-tech/tc-cache ../tc-cache    
build_steps: &build_steps
    # Initialization.
    # - run: *install_dependency
    - checkout
    - run: *install_deploysuite
    - run: *install_dependentrepo
    - run:
        name: "AWS Configuration"
        command: |
          ./awsconfiguration.sh $BUILD_ENV
          source awsenvconf
          ant -version
          echo $PATH
    - run:
        name: Building application
        command: |
          source awsenvconf
          ant -version
          echo $PATH
          ant -f move.xml package-topcoder
          zip -r lib.zip lib
          zip -r resources.zip resources
          cd ../tc-cache && ant && cp build/dist/lib/tcs/tc_cache/1.0.0/tc_cache.jar ../project/ && cd ../project
    # - store_artifacts:
    #     path: ./topcoder.jar
    #     destination: topcoder.jar
    # - store_artifacts:
    #     path: ./tc_cache.jar
    #     destination: tc_cache.jar
    - run:
        name: Build Pacakge
        command: ./build-package.sh $BUILD_ENV       
    - run:
        name: "Deployment tc-website app"
        command: |
          source awsenvconf
          echo $VER
          # cp -f buildvar-app.conf buildvar.conf
          ./deploy.sh $BUILD_ENV $VER


jobs:
  # Build & Deploy against development backend
  "build-dev":
    <<: *defaults
    environment:
      BUILD_ENV: "DEV"
      GLUE_BRANCH: "dev"
      TCSHARED_BRANCH: "dev"
      TCEA_BRANCH: "dev"
      TCCACHE_BRANCH: "master"
    steps: *build_steps
  
  "build-prod":
    <<: *defaults
    environment:
      BUILD_ENV: "PROD"
      GLUE_BRANCH: "master"
      TCSHARED_BRANCH: "master"
      TCEA_BRANCH: "master"
      TCCACHE_BRANCH: "master"
    steps: *build_steps      

workflows:
  version: 2
  build:
    jobs:
      - Hold [TC-Website-Build-Deploy]:
          type: approval
      - build-dev:
          context : org-global  
          requires:
            - Hold [TC-Website-Build-Deploy]       
          filters:
            branches:
              only: [dev, reskin-payment, universal-nav, ci-fix-image]
      - build-prod:
          context : org-global   
          requires:
            - Hold [TC-Website-Build-Deploy]   
          filters:
            branches:
              only: master
